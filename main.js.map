{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./index.js"],"sourcesContent":["async function loadJson(url) {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(response.status);\n    }\n    const json = await response.json();\n    return json;\n}\n\nasync function getCurrentWeather(city) {\n    const url = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}?unitGroup=metric&elements=datetime%2CdatetimeEpoch%2CresolvedAddress%2Ctemp%2Cfeelslike%2Chumidity%2Cwindspeed%2Cuvindex%2Cconditions%2Cdescription%2Cicon&include=remote%2Cobs%2Ccurrent%2Cfcst&key=T3K39GSEC83MWTCTJQVNUSYSN&contentType=json`;\n    const weatherJson = await loadJson(url);\n    const address = weatherJson.resolvedAddress;\n    const { currentConditions } = weatherJson;\n    const {\n        temp,\n        humidity,\n        conditions,\n        feelslike: feelsLike,\n        windspeed: windSpeed,\n    } = currentConditions;\n    const currentWeather = {\n        address,\n        conditions,\n        temp,\n        feelsLike,\n        humidity,\n        windSpeed,\n    };\n    return currentWeather;\n}\n\nfunction celsiusToFahrenheit(temp) {\n    let f = (temp * 9) / 5;\n    f += 32;\n    return +f.toFixed(2);\n}\n\nfunction updateWeatherInfoDisplay(weather, isCelsius = true, isKPH = true) {\n    const conditionDiv = document.querySelector('.condition');\n    const addressDiv = document.querySelector('.address');\n    const tempDiv = document.querySelector('.temp');\n    const fellsLikeDiv = document.querySelector('.feels-like');\n    const humidityDiv = document.querySelector('.humidity');\n    const windDiv = document.querySelector('.wind');\n\n    conditionDiv.innerText = weather.conditions;\n    addressDiv.innerText = weather.address;\n\n    const temp = isCelsius ? weather.temp : celsiusToFahrenheit(weather.temp);\n    tempDiv.innerText = temp;\n\n    const feelsLike = isCelsius\n        ? weather.feelsLike\n        : celsiusToFahrenheit(weather.feelsLike);\n\n    fellsLikeDiv.innerText = `FEELS LIKE: ${feelsLike}`;\n    humidityDiv.innerText = `HUMIDITY: ${weather.humidity}%`;\n    windDiv.innerText = `WIND: ${weather.windSpeed} ${isKPH ? 'KPH' : 'MPH'}`;\n\n    const tempSymbol = 'Â°';\n    const tempLetter = isCelsius ? 'C' : 'F';\n    const tempSymbolSup = document.createElement('sup');\n    tempSymbolSup.classList.add('temp-symbol');\n    tempSymbolSup.innerText = tempSymbol + tempLetter;\n    tempDiv.appendChild(tempSymbolSup.cloneNode(true));\n    fellsLikeDiv.appendChild(tempSymbolSup.cloneNode(true));\n\n    const condition = weather.conditions.toLowerCase();\n    let cssClass = '';\n    if (condition.includes('rain')) {\n        cssClass = 'rainy';\n    } else if (condition.includes('snow')) {\n        cssClass = 'snowy';\n    } else if (condition.includes('partially')) {\n        cssClass = 'partially-cloudy';\n    } else if (condition.includes('cloudy')) {\n        cssClass = 'cloudy';\n    } else if (condition.includes('overcast')) {\n        cssClass = 'overcast';\n    } else if (condition.includes('clear')) {\n        cssClass = 'sunny';\n    }\n    document.body.classList = [];\n    document.body.classList.add(cssClass);\n}\n\nlet currentWeather = null;\nconst cityInput = document.querySelector('#city');\ncityInput.value = 'Tehran';\ngetCurrentWeather('tehran').then((weather) => {\n    updateWeatherInfoDisplay(weather);\n    currentWeather = weather;\n});\n\nconst submitCityButton = document.querySelector('button.submit-city');\nsubmitCityButton.addEventListener('click', async (e) => {\n    e.preventDefault();\n    const city = cityInput.value;\n    try {\n        const weather = await getCurrentWeather(city);\n        updateWeatherInfoDisplay(weather);\n        currentWeather = weather;\n    } catch (error) {\n        const errorSpan = document.querySelector('span.error');\n        errorSpan.classList.add('visible');\n        cityInput.classList.add('error');\n        if (+error.message === 400) {\n            errorSpan.innerText = 'City info is not available :(';\n        } else {\n            errorSpan.innerText = error.message;\n        }\n    }\n});\n\ncityInput.addEventListener('input', () => {\n    const errorSpan = document.querySelector('span.error');\n    cityInput.classList.remove('error');\n    errorSpan.classList.remove('visible');\n});\n\nconst celsiusButton = document.querySelector('button.celsius');\nconst fahrenheitButton = document.querySelector('button.fahrenheit');\n\ncelsiusButton.addEventListener('click', () => {\n    celsiusButton.classList.add('selected');\n    fahrenheitButton.classList.remove('selected');\n    updateWeatherInfoDisplay(currentWeather, true);\n});\n\nfahrenheitButton.addEventListener('click', () => {\n    celsiusButton.classList.remove('selected');\n    fahrenheitButton.classList.add('selected');\n    updateWeatherInfoDisplay(currentWeather, false);\n});\n"],"names":["async","getCurrentWeather","city","url","weatherJson","response","fetch","ok","Error","status","json","loadJson","address","resolvedAddress","currentConditions","temp","humidity","conditions","feelslike","feelsLike","windspeed","windSpeed","celsiusToFahrenheit","f","toFixed","updateWeatherInfoDisplay","weather","isCelsius","arguments","length","undefined","isKPH","conditionDiv","document","querySelector","addressDiv","tempDiv","fellsLikeDiv","humidityDiv","windDiv","innerText","tempLetter","tempSymbolSup","createElement","classList","add","appendChild","cloneNode","condition","toLowerCase","cssClass","includes","body","currentWeather","cityInput","value","then","addEventListener","e","preventDefault","error","errorSpan","message","remove","celsiusButton","fahrenheitButton"],"sourceRoot":""}